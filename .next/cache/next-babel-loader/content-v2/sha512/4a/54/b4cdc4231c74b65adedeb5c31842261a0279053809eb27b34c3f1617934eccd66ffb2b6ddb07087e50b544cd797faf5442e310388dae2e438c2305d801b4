{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Subhash Kumar\\\\Desktop\\\\Projects\\\\qex-frontend\\\\context\\\\AuthContext.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../components/firebase\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport const AuthProvider = ({\n  children\n}) => {\n  const {\n    0: currentUser,\n    1: setCurrentUser\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    resetPassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/Subhash Kumar/Desktop/Projects/qex-frontend/context/AuthContext.js"],"names":["React","useContext","useState","useEffect","auth","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","resetPassword","sendPasswordResetEmail","logout","signOut","unsubscribe","onAuthStateChanged","user","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,wBAArB;AAEA,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;AACA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAON,UAAU,CAACI,WAAD,CAAjB;AACD;AAED,OAAO,MAAMG,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCT,QAAQ,EAA9C;AACA,QAAM;AAAA,OAACU,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,IAAD,CAAtC;;AACA,WAASY,MAAT,CAAgBC,KAAhB,EAAuBC,QAAvB,EAAiC;AAC/B,WAAOZ,IAAI,CAACa,8BAAL,CAAoCF,KAApC,EAA2CC,QAA3C,CAAP;AACD;;AACD,WAASE,KAAT,CAAeH,KAAf,EAAsBC,QAAtB,EAAgC;AAC9B,WAAOZ,IAAI,CAACe,0BAAL,CAAgCJ,KAAhC,EAAuCC,QAAvC,CAAP;AACD;;AACD,WAASI,aAAT,CAAuBL,KAAvB,EAA8B;AAC5B,WAAOX,IAAI,CAACiB,sBAAL,CAA4BN,KAA5B,CAAP;AACD;;AACD,WAASO,MAAT,GAAkB;AAChB,WAAOlB,IAAI,CAACmB,OAAL,EAAP;AACD;;AACDpB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,WAAW,GAAGpB,IAAI,CAACqB,kBAAL,CAAyBC,IAAD,IAAU;AACpDf,MAAAA,cAAc,CAACe,IAAD,CAAd;AACAb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHmB,CAApB;AAIA,WAAOW,WAAP;AACD,GANQ,EAMN,EANM,CAAT;AAOA,QAAMG,KAAK,GAAG;AAAEjB,IAAAA,WAAF;AAAeI,IAAAA,MAAf;AAAuBI,IAAAA,KAAvB;AAA8BI,IAAAA,MAA9B;AAAsCF,IAAAA;AAAtC,GAAd;AACA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEO,KAA7B;AAAA,cACG,CAACf,OAAD,IAAYH;AADf;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA5BM","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth } from \"../components/firebase\";\r\n\r\nconst AuthContext = React.createContext();\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email);\r\n  }\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n  const value = { currentUser, signup, login, logout, resetPassword };\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}